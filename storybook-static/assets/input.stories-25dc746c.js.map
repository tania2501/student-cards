{"version":3,"file":"input.stories-25dc746c.js","sources":["../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs","../../src/assets/icons/search.tsx","../../src/assets/icons/unVisiblePassword.tsx","../../src/assets/icons/visiblePassword.tsx","../../src/components/ui/input/input.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","export const SvgSearch = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={20} fill=\"none\">\r\n    <path\r\n      fill=\"#fff\"\r\n      d=\"m20.71 19.29-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1.002 1.002 0 0 0 1.639-.325 1 1 0 0 0-.219-1.095ZM5 11a6 6 0 1 1 12 0 6 6 0 0 1-12 0Z\"\r\n    />\r\n  </svg>\r\n)\r\n","export const SvgUnvisible = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} fill=\"none\">\r\n    <path\r\n      fill=\"#fff\"\r\n      d=\"M21.87 11.5c-.64-1.11-4.16-6.68-10.14-6.5-5.53.14-8.73 5-9.6 6.5a1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25c5.53-.14 8.74-5 9.6-6.5a1 1 0 0 0 0-1ZM12.22 17c-4.31.1-7.12-3.59-8-5 1-1.61 3.61-4.9 7.61-5 4.29-.11 7.11 3.59 8 5-1.03 1.61-3.61 4.9-7.61 5Z\"\r\n    />\r\n    <path\r\n      fill=\"#fff\"\r\n      d=\"M12 8.5a3.5 3.5 0 1 0 0 7 3.5 3.5 0 0 0 0-7Zm0 5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3Z\"\r\n    />\r\n  </svg>\r\n)\r\n","export const SvgVisible = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} fill=\"none\">\r\n    <path\r\n      fill=\"#fff\"\r\n      d=\"M4.71 3.29a1.004 1.004 0 1 0-1.42 1.42l5.63 5.63a3.5 3.5 0 0 0 4.74 4.74l5.63 5.63a1.002 1.002 0 0 0 1.639-.325 1 1 0 0 0-.219-1.095l-16-16ZM12 13.5a1.5 1.5 0 0 1-1.5-1.5v-.07l1.56 1.56-.06.01Z\"\r\n    />\r\n    <path\r\n      fill=\"#fff\"\r\n      d=\"M12.22 17c-4.3.1-7.12-3.59-8-5 .626-1 1.38-1.914 2.24-2.72L5 7.87a15.89 15.89 0 0 0-2.87 3.63 1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25a9.48 9.48 0 0 0 3.23-.67l-1.58-1.58a7.739 7.739 0 0 1-1.7.25ZM21.87 11.5c-.64-1.11-4.17-6.68-10.14-6.5a9.48 9.48 0 0 0-3.23.67l1.58 1.58a7.74 7.74 0 0 1 1.7-.25c4.29-.11 7.11 3.59 8 5a13.699 13.699 0 0 1-2.29 2.72L19 16.13a15.89 15.89 0 0 0 2.91-3.63 1 1 0 0 0-.04-1Z\"\r\n    />\r\n  </svg>\r\n)\r\n","import { ComponentProps, ComponentPropsWithoutRef, forwardRef, useState } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport { SvgSearch } from '../../../assets/icons/search'\r\nimport { SvgUnvisible } from '../../../assets/icons/unVisiblePassword'\r\nimport { SvgVisible } from '../../../assets/icons/visiblePassword'\r\nimport { Typography } from '../typography'\r\n\r\nimport s from './input.module.scss'\r\n\r\nexport type InputProps = {\r\n  onValueChange?: (value: string) => void\r\n  containerProps?: ComponentProps<'div'>\r\n  labelProps?: ComponentProps<'label'>\r\n  errorMessage?: string\r\n  label?: string\r\n} & ComponentPropsWithoutRef<'input'>\r\n\r\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      className,\r\n      errorMessage,\r\n      placeholder,\r\n      type,\r\n      containerProps,\r\n      labelProps,\r\n      label,\r\n      onChange,\r\n      onValueChange,\r\n      ...restProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const isShowPassword = type === 'password'\r\n    const isTypeSearch = type === 'search'\r\n    const getFinalType = (type: ComponentProps<'input'>['type'], showPassword: boolean) => {\r\n      if (type === 'password' && showPassword) {\r\n        return 'text'\r\n      }\r\n\r\n      return type\r\n    }\r\n    const finalType = getFinalType(type, visible)\r\n    const classNames = {\r\n      input: clsx(s.input, !!isTypeSearch && s.svgSearch, !!errorMessage && s.error),\r\n      label: clsx(s.label),\r\n      container: clsx(s.main),\r\n      visible: clsx(s.visible),\r\n    }\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      onChange?.(e)\r\n      onValueChange?.(e.target.value)\r\n    }\r\n\r\n    return (\r\n      <div className={classNames.container}>\r\n        {label && (\r\n          <Typography as=\"label\" variant=\"body2\" className={classNames.label}>\r\n            {label}\r\n          </Typography>\r\n        )}\r\n        <div className={s.inputIcon}>\r\n          <div className={s.search}>{type === 'search' && <SvgSearch />}</div>\r\n          <input\r\n            className={classNames.input}\r\n            type={finalType}\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n            ref={ref}\r\n            {...restProps}\r\n          />\r\n          {isShowPassword && (\r\n            <button className={classNames.visible} onClick={() => setVisible(prev => !prev)}>\r\n              {visible ? <SvgVisible /> : <SvgUnvisible />}\r\n            </button>\r\n          )}\r\n        </div>\r\n        {errorMessage && (\r\n          <Typography variant=\"error\" className={s.error}>\r\n            {errorMessage}\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n"],"names":["r","e","t","f","n","clsx","SvgSearch","jsx","SvgUnvisible","jsxs","SvgVisible","Input","forwardRef","className","errorMessage","placeholder","type","containerProps","labelProps","label","onChange","onValueChange","restProps","ref","visible","setVisible","useState","isShowPassword","isTypeSearch","finalType","type2","showPassword","classNames","s","handleChange","Typography","prev"],"mappings":"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","x_google_ignoreList":[0]}